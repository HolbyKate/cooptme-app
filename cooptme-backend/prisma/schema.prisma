generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]  @relation("RoleToUser")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String
  firstName       String
  lastName        String
  provider        String?   // "email" ou "google"
  providerId      String?   // ID externe pour l'auth sociale
  photoUrl        String?
  emailVerified   Boolean   @default(false)
  roleId          Int?      // Référence au rôle
  role            Role?     @relation("RoleToUser", fields: [roleId], references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model New Profile {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  url       String
  company   String
  job       String
  event     String
  eventDate DateTime
  createdAt DateTime @default(now())
}

model Profile {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  url       String   @unique
  company   String
  job       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  url       String   @unique
  company   String
  job       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([firstName, lastName]) // Contrainte unique composite
}

model JobOffer {
  id           Int      @id @default(autoincrement())
  title        String
  company      String
  location     String
  contractType String
  salary       String
  experience   String
  description  String
  profile      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([title, company])
}
